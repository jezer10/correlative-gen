services:
  mysql:
    image: mysql
    restart: always
    ports:
      - 3306:3306
    networks:
      - internal
    env_file:
      - .env.production
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
  golang:
    build: .
    networks:
      - internal
    ports:
      - 8080:8080
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy
      mysql:
          condition: service_healthy 
  pg:
    image: postgres
    restart: always
    # ports:
    #   - 5432:5432
    networks:
      - internal
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5


  redis:
    image: redis
    restart: unless-stopped
    # ports:
    #   - 6379:6379
    networks:
      - internal
    env_file:
      - .env.production
    command: redis-server --requirepass "$REDIS_PASSWORD"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  pg_data:
  redis_data:
  mysql_data:


networks:
  internal:
